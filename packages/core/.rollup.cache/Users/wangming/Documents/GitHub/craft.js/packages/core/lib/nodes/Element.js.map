{"version":3,"file":"Element.js","sourceRoot":"","sources":["../../src/nodes/Element.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,6BAA6B,EAAE,MAAM,gBAAgB,CAAC;AAC/D,OAAO,KAAK,EAAE,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AACxC,OAAO,SAAS,MAAM,gBAAgB,CAAC;AAEvC,OAAO,EAAE,WAAW,EAAE,MAAM,eAAe,CAAC;AAC5C,OAAO,EAAE,eAAe,EAAE,MAAM,mBAAmB,CAAC;AAEpD,OAAO,EAAE,iBAAiB,EAAE,MAAM,6BAA6B,CAAC;AAGhE,MAAM,CAAC,MAAM,mBAAmB,GAAG;IACjC,EAAE,EAAE,KAAK;IACT,MAAM,EAAE,KAAK;IACb,MAAM,EAAE,EAAE;IACV,MAAM,EAAE,KAAK;CACd,CAAC;AAEF,MAAM,CAAC,MAAM,qBAAqB,GAAG;IACnC,EAAE,EAAE,MAAM;IACV,MAAM,EAAE,UAAU;CACnB,CAAC;AAWF,MAAM,UAAU,OAAO,CAA8B,EACnD,EAAE,EACF,QAAQ,EACR,GAAG,YAAY,EACC;IAChB,MAAM,EAAE,EAAE,EAAE,GAAG;QACb,GAAG,mBAAmB;QACtB,GAAG,YAAY;KAChB,CAAC;IAEF,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,GAAG,iBAAiB,EAAE,CAAC;IAC/C,MAAM,EAAE,EAAE,EAAE,MAAM,EAAE,aAAa,EAAE,GAAG,eAAe,EAAE,CAAC;IAExD,MAAM,CAAC,YAAY,CAAC,GAAG,QAAQ,CAAgB,GAAG,EAAE;QAClD,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE,6BAA6B,CAAC,CAAC;QAC/C,MAAM,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC;QAEtC,IAAI,aAAa,EAAE;YACjB,MAAM,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC;gBAC5C,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE;gBAC7C,CAAC,CAAC,IAAI,CAAC;YAET,qFAAqF;YACrF,IAAI,YAAY,IAAI,YAAY,CAAC,IAAI,CAAC,IAAI,KAAK,EAAE,EAAE;gBACjD,OAAO,YAAY,CAAC,EAAE,CAAC;aACxB;YAED,iDAAiD;YACjD,MAAM,aAAa,GAAG,KAAK,CAAC,aAAa,CACvC,OAAO,EACP,YAAY,EACZ,QAAQ,CACT,CAAC;YAEF,MAAM,IAAI,GAAG,KAAK,CAAC,iBAAiB,CAAC,aAAa,CAAC,CAAC,UAAU,EAAE,CAAC;YAEjE,OAAO,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,qBAAqB,CAAC,IAAI,EAAE,MAAM,EAAE,EAAE,CAAC,CAAC;YACjE,OAAO,IAAI,CAAC,UAAU,CAAC;SACxB;QACD,OAAO,IAAI,CAAC;IACd,CAAC,CAAC,CAAC;IAEH,OAAO,YAAY,CAAC,CAAC,CAAC,oBAAC,WAAW,IAAC,EAAE,EAAE,YAAY,GAAI,CAAC,CAAC,CAAC,IAAI,CAAC;AACjE,CAAC","sourcesContent":["import { ERROR_TOP_LEVEL_ELEMENT_NO_ID } from '@craftjs/utils';\nimport React, { useState } from 'react';\nimport invariant from 'tiny-invariant';\n\nimport { NodeElement } from './NodeElement';\nimport { useInternalNode } from './useInternalNode';\n\nimport { useInternalEditor } from '../editor/useInternalEditor';\nimport { NodeId } from '../interfaces';\n\nexport const defaultElementProps = {\n  is: 'div',\n  canvas: false,\n  custom: {},\n  hidden: false,\n};\n\nexport const elementPropToNodeData = {\n  is: 'type',\n  canvas: 'isCanvas',\n};\n\nexport type ElementProps<T extends React.ElementType> = {\n  id?: NodeId;\n  is?: T;\n  custom?: Record<string, any>;\n  children?: React.ReactNode;\n  canvas?: boolean;\n  hidden?: boolean;\n} & React.ComponentProps<T>;\n\nexport function Element<T extends React.ElementType>({\n  id,\n  children,\n  ...elementProps\n}: ElementProps<T>) {\n  const { is } = {\n    ...defaultElementProps,\n    ...elementProps,\n  };\n\n  const { query, actions } = useInternalEditor();\n  const { id: nodeId, inNodeContext } = useInternalNode();\n\n  const [linkedNodeId] = useState<NodeId | null>(() => {\n    invariant(!!id, ERROR_TOP_LEVEL_ELEMENT_NO_ID);\n    const node = query.node(nodeId).get();\n\n    if (inNodeContext) {\n      const existingNode = node.data.linkedNodes[id]\n        ? query.node(node.data.linkedNodes[id]).get()\n        : null;\n\n      // Render existing linked Node if it already exists (and is the same type as the JSX)\n      if (existingNode && existingNode.data.type === is) {\n        return existingNode.id;\n      }\n\n      // otherwise, create and render a new linked Node\n      const linkedElement = React.createElement(\n        Element,\n        elementProps,\n        children\n      );\n\n      const tree = query.parseReactElement(linkedElement).toNodeTree();\n\n      actions.history.ignore().addLinkedNodeFromTree(tree, nodeId, id);\n      return tree.rootNodeId;\n    }\n    return null;\n  });\n\n  return linkedNodeId ? <NodeElement id={linkedNodeId} /> : null;\n}\n"]}