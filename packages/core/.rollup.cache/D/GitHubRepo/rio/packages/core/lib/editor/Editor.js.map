{"version":3,"file":"Editor.js","sourceRoot":"","sources":["../../src/editor/Editor.tsx"],"names":[],"mappings":"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","sourcesContent":["import { ERROR_RESOLVER_NOT_AN_OBJECT, HISTORY_ACTIONS } from '@rio/utils';\r\nimport React, { useEffect, useRef } from 'react';\r\nimport invariant from 'tiny-invariant';\r\n\r\nimport { EditorContext } from './EditorContext';\r\nimport { useEditorStore } from './store';\r\n\r\nimport { Events } from '../events';\r\nimport { Options } from '../interfaces';\r\n\r\ntype EditorProps = Partial<Options> & {\r\n  children?: React.ReactNode;\r\n};\r\n\r\n/**\r\n * A React Component that provides the Editor context\r\n */\r\nexport const Editor = ({ children, ...options }: EditorProps) => {\r\n  // we do not want to warn the user if no resolver was supplied\r\n  if (options.resolver !== undefined) {\r\n    invariant(\r\n      typeof options.resolver === 'object' &&\r\n        !Array.isArray(options.resolver) &&\r\n        options.resolver !== null,\r\n      ERROR_RESOLVER_NOT_AN_OBJECT\r\n    );\r\n  }\r\n\r\n  const optionsRef = useRef(options);\r\n\r\n  const context = useEditorStore(\r\n    optionsRef.current,\r\n    (state, previousState, actionPerformedWithPatches, query, normalizer) => {\r\n      if (!actionPerformedWithPatches) {\r\n        return;\r\n      }\r\n\r\n      const { patches, ...actionPerformed } = actionPerformedWithPatches;\r\n\r\n      for (let i = 0; i < patches.length; i++) {\r\n        const { path } = patches[i];\r\n        const isModifyingNodeData =\r\n          path.length > 2 && path[0] === 'nodes' && path[2] === 'data';\r\n\r\n        let actionType = actionPerformed.type;\r\n\r\n        if (\r\n          [HISTORY_ACTIONS.IGNORE, HISTORY_ACTIONS.THROTTLE].includes(\r\n            actionType\r\n          ) &&\r\n          actionPerformed.params\r\n        ) {\r\n          actionPerformed.type = actionPerformed.params[0];\r\n        }\r\n\r\n        if (\r\n          ['setState', 'deserialize'].includes(actionPerformed.type) ||\r\n          isModifyingNodeData\r\n        ) {\r\n          normalizer((draft) => {\r\n            if (state.options.normalizeNodes) {\r\n              state.options.normalizeNodes(\r\n                draft,\r\n                previousState,\r\n                actionPerformed,\r\n                query\r\n              );\r\n            }\r\n          });\r\n          break; // we exit the loop as soon as we find a change in node.data\r\n        }\r\n      }\r\n    }\r\n  );\r\n\r\n  // sync enabled prop with editor store options\r\n  useEffect(() => {\r\n    if (!context) {\r\n      return;\r\n    }\r\n\r\n    if (\r\n      options.enabled === undefined ||\r\n      context.query.getOptions().enabled === options.enabled\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    context.actions.setOptions((editorOptions) => {\r\n      editorOptions.enabled = options.enabled;\r\n    });\r\n  }, [context, options.enabled]);\r\n\r\n  useEffect(() => {\r\n    context.subscribe(\r\n      (_) => ({\r\n        json: context.query.serialize(),\r\n      }),\r\n      () => {\r\n        context.query.getOptions().onNodesChange(context.query);\r\n      }\r\n    );\r\n  }, [context]);\r\n\r\n  if (!context) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <EditorContext.Provider value={context}>\r\n      <Events>{children}</Events>\r\n    </EditorContext.Provider>\r\n  );\r\n};\r\n"]}