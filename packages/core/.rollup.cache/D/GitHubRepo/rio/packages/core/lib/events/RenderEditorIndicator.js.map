{"version":3,"file":"RenderEditorIndicator.js","sourceRoot":"","sources":["../../src/events/RenderEditorIndicator.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,eAAe,EAAE,UAAU,EAAE,MAAM,YAAY,CAAC;AACzD,OAAO,KAAK,EAAE,EAAE,SAAS,EAAE,MAAM,OAAO,CAAC;AAEzC,OAAO,EAAE,eAAe,EAAE,MAAM,gBAAgB,CAAC;AACjD,OAAO,eAAe,MAAM,mBAAmB,CAAC;AAEhD,OAAO,EAAE,iBAAiB,EAAE,MAAM,6BAA6B,CAAC;AAEhE,MAAM,CAAC,MAAM,qBAAqB,GAAG,GAAG,EAAE;IACxC,MAAM,EAAE,SAAS,EAAE,gBAAgB,EAAE,OAAO,EAAE,GAAG,iBAAiB,CAChE,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;QACV,SAAS,EAAE,KAAK,CAAC,SAAS;QAC1B,gBAAgB,EAAE,KAAK,CAAC,OAAO,CAAC,SAAS;QACzC,OAAO,EAAE,KAAK,CAAC,OAAO,CAAC,OAAO;KAC/B,CAAC,CACH,CAAC;IAEF,MAAM,OAAO,GAAG,eAAe,EAAE,CAAC;IAElC,SAAS,CAAC,GAAG,EAAE;QACb,IAAI,CAAC,OAAO,EAAE,CAAC;YACb,OAAO;QACT,CAAC;QAED,IAAI,CAAC,OAAO,EAAE,CAAC;YACb,OAAO,CAAC,OAAO,EAAE,CAAC;YAClB,OAAO;QACT,CAAC;QAED,OAAO,CAAC,MAAM,EAAE,CAAC;IACnB,CAAC,EAAE,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,CAAC;IAEvB,IAAI,CAAC,SAAS,EAAE,CAAC;QACf,OAAO,IAAI,CAAC;IACd,CAAC;IAED,OAAO,KAAK,CAAC,aAAa,CAAC,eAAe,EAAE;QAC1C,SAAS,EAAE,gBAAgB,CAAC,SAAS;QACrC,KAAK,EAAE;YACL,GAAG,eAAe,CAChB,SAAS,CAAC,SAAS,EACnB,UAAU,CAAC,SAAS,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,EAC1C,SAAS,CAAC,SAAS,CAAC,WAAW;gBAC7B,UAAU,CAAC,SAAS,CAAC,SAAS,CAAC,WAAW,CAAC,GAAG,CAAC,EACjD,gBAAgB,CAAC,SAAS,CAC3B;YACD,eAAe,EAAE,SAAS,CAAC,KAAK;gBAC9B,CAAC,CAAC,gBAAgB,CAAC,KAAK;gBACxB,CAAC,CAAC,gBAAgB,CAAC,OAAO;YAC5B,UAAU,EAAE,gBAAgB,CAAC,UAAU,IAAI,cAAc;YACzD,GAAG,CAAC,gBAAgB,CAAC,KAAK,IAAI,EAAE,CAAC;SAClC;QACD,SAAS,EAAE,SAAS,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG;KAC1C,CAAC,CAAC;AACL,CAAC,CAAC","sourcesContent":["import { RenderIndicator, getDOMInfo } from '@rioe/utils';\r\nimport React, { useEffect } from 'react';\r\n\r\nimport { useEventHandler } from './EventContext';\r\nimport movePlaceholder from './movePlaceholder';\r\n\r\nimport { useInternalEditor } from '../editor/useInternalEditor';\r\n\r\nexport const RenderEditorIndicator = () => {\r\n  const { indicator, indicatorOptions, enabled } = useInternalEditor(\r\n    (state) => ({\r\n      indicator: state.indicator,\r\n      indicatorOptions: state.options.indicator,\r\n      enabled: state.options.enabled,\r\n    })\r\n  );\r\n\r\n  const handler = useEventHandler();\r\n\r\n  useEffect(() => {\r\n    if (!handler) {\r\n      return;\r\n    }\r\n\r\n    if (!enabled) {\r\n      handler.disable();\r\n      return;\r\n    }\r\n\r\n    handler.enable();\r\n  }, [enabled, handler]);\r\n\r\n  if (!indicator) {\r\n    return null;\r\n  }\r\n\r\n  return React.createElement(RenderIndicator, {\r\n    className: indicatorOptions.className,\r\n    style: {\r\n      ...movePlaceholder(\r\n        indicator.placement,\r\n        getDOMInfo(indicator.placement.parent.dom),\r\n        indicator.placement.currentNode &&\r\n          getDOMInfo(indicator.placement.currentNode.dom),\r\n        indicatorOptions.thickness\r\n      ),\r\n      backgroundColor: indicator.error\r\n        ? indicatorOptions.error\r\n        : indicatorOptions.success,\r\n      transition: indicatorOptions.transition || '0.2s ease-in',\r\n      ...(indicatorOptions.style ?? {}),\r\n    },\r\n    parentDom: indicator.placement.parent.dom,\r\n  });\r\n};\r\n"]}