{"version":3,"file":"Events.js","sourceRoot":"","sources":["../../src/events/Events.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,EAAE,UAAU,EAAE,OAAO,EAAE,MAAM,OAAO,CAAC;AAEnD,OAAO,EAAE,mBAAmB,EAAE,MAAM,gBAAgB,CAAC;AACrD,OAAO,EAAE,qBAAqB,EAAE,MAAM,yBAAyB,CAAC;AAEhE,OAAO,EAAE,aAAa,EAAE,MAAM,yBAAyB,CAAC;AAMxD,MAAM,CAAC,MAAM,MAAM,GAAG,CAAC,EAAE,QAAQ,EAAe,EAAE,EAAE;IAClD,MAAM,KAAK,GAAG,UAAU,CAAC,aAAa,CAAC,CAAC;IAExC,MAAM,OAAO,GAAG,OAAO,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;QACtE,KAAK;KACN,CAAC,CAAC;IAEH,IAAI,CAAC,OAAO,EAAE,CAAC;QACb,OAAO,IAAI,CAAC;IACd,CAAC;IAED,OAAO,CACL,oBAAC,mBAAmB,CAAC,QAAQ,IAAC,KAAK,EAAE,OAAO;QAC1C,oBAAC,qBAAqB,OAAG;QACxB,QAAQ,CACoB,CAChC,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import React, { useContext, useMemo } from 'react';\r\n\r\nimport { EventHandlerContext } from './EventContext';\r\nimport { RenderEditorIndicator } from './RenderEditorIndicator';\r\n\r\nimport { EditorContext } from '../editor/EditorContext';\r\n\r\ntype EventsProps = {\r\n  children?: React.ReactNode;\r\n};\r\n\r\nexport const Events = ({ children }: EventsProps) => {\r\n  const store = useContext(EditorContext);\r\n\r\n  const handler = useMemo(() => store.query.getOptions().handlers(store), [\r\n    store,\r\n  ]);\r\n\r\n  if (!handler) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <EventHandlerContext.Provider value={handler}>\r\n      <RenderEditorIndicator />\r\n      {children}\r\n    </EventHandlerContext.Provider>\r\n  );\r\n};\r\n"]}