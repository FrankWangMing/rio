{"version":3,"file":"editor.js","sourceRoot":"","sources":["../../src/interfaces/editor.ts"],"names":[],"mappings":"","sourcesContent":["import { QueryCallbacksFor, Delete, PatchListenerAction } from '@rioe/utils';\r\n\r\nimport { Placement } from './events';\r\nimport { Nodes, NodeEventTypes, NodeId, Node } from './nodes';\r\n\r\nimport { QueryMethods } from '../editor/query';\r\nimport { EditorStore, ActionMethodsWithConfig } from '../editor/store';\r\nimport { useInternalEditorReturnType } from '../editor/useInternalEditor';\r\nimport { CoreEventHandlers } from '../events';\r\n\r\nexport type Options = {\r\n  onRender: React.ComponentType<{ render: React.ReactElement }>;\r\n  onBeforeMoveEnd: (\r\n    targetNode: Node,\r\n    newParentNode: Node,\r\n    existingParentNode: Node\r\n  ) => void;\r\n  onNodesChange: (query: QueryCallbacksFor<typeof QueryMethods>) => void;\r\n  resolver: Resolver;\r\n  enabled: boolean;\r\n  indicator: Partial<{\r\n    success: string;\r\n    error: string;\r\n    transition: string;\r\n    thickness: number;\r\n    className: string;\r\n    style: React.CSSProperties;\r\n  }>;\r\n  handlers: (store: EditorStore) => CoreEventHandlers;\r\n  normalizeNodes: (\r\n    state: EditorState,\r\n    previousState: EditorState,\r\n    actionPerformed: Delete<\r\n      PatchListenerAction<typeof ActionMethodsWithConfig>,\r\n      'patches'\r\n    >,\r\n    query: QueryCallbacksFor<typeof QueryMethods>\r\n  ) => void;\r\n};\r\n\r\nexport type Resolver = Record<string, string | React.ElementType>;\r\n\r\nexport interface Indicator {\r\n  placement: Placement;\r\n  error: string | null;\r\n}\r\n\r\nexport type EditorEvents = Record<NodeEventTypes, Set<NodeId>>;\r\n\r\nexport type EditorState = {\r\n  nodes: Nodes;\r\n  events: EditorEvents;\r\n  options: Options;\r\n  indicator: Indicator;\r\n};\r\n\r\nexport type ConnectedEditor<S = null> = useInternalEditorReturnType<S>;\r\n"]}