{"version":3,"file":"useInternalEditor.js","sourceRoot":"","sources":["../../src/editor/useInternalEditor.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,YAAY,EAGZ,kBAAkB,EAElB,0CAA0C,GAC3C,MAAM,YAAY,CAAC;AACpB,OAAO,EAAE,UAAU,EAAE,SAAS,EAAE,OAAO,EAAE,MAAM,OAAO,CAAC;AACvD,OAAO,SAAS,MAAM,gBAAgB,CAAC;AAEvC,OAAO,EAAE,aAAa,EAAE,MAAM,iBAAiB,CAAC;AAKhD,OAAO,EAAE,eAAe,EAAE,MAAM,wBAAwB,CAAC;AAiBzD,MAAM,UAAU,iBAAiB,CAC/B,SAA8B;IAE9B,MAAM,OAAO,GAAG,eAAe,EAAE,CAAC;IAClC,MAAM,KAAK,GAAG,UAAU,CAAC,aAAa,CAAC,CAAC;IACxC,SAAS,CAAC,KAAK,EAAE,0CAA0C,CAAC,CAAC;IAE7D,MAAM,SAAS,GAAG,YAAY,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;IAEjD,MAAM,eAAe,GAAG,OAAO,CAC7B,GAAG,EAAE,CAAC,OAAO,IAAI,OAAO,CAAC,qBAAqB,EAAE,EAChD,CAAC,OAAO,CAAC,CACV,CAAC;IAEF,SAAS,CAAC,GAAG,EAAE;QACb,eAAe,CAAC,QAAQ,EAAE,CAAC;QAE3B,OAAO,GAAG,EAAE;YACV,eAAe,CAAC,OAAO,EAAE,CAAC;QAC5B,CAAC,CAAC;IACJ,CAAC,EAAE,CAAC,eAAe,CAAC,CAAC,CAAC;IAEtB,MAAM,UAAU,GAAG,OAAO,CACxB,GAAG,EAAE,CAAC,eAAe,IAAI,kBAAkB,CAAC,eAAe,CAAC,UAAU,CAAC,EACvE,CAAC,eAAe,CAAC,CAClB,CAAC;IAEF,OAAO;QACL,GAAG,SAAS;QACZ,UAAU;QACV,SAAS,EAAE,CAAC,CAAC,KAAK;QAClB,KAAK;KACN,CAAC;AACJ,CAAC","sourcesContent":["import {\r\n  useCollector,\r\n  useCollectorReturnType,\r\n  QueryCallbacksFor,\r\n  wrapConnectorHooks,\r\n  EventHandlerConnectors,\r\n  ERROR_USE_EDITOR_OUTSIDE_OF_EDITOR_CONTEXT,\r\n} from '@rio/utils';\r\nimport { useContext, useEffect, useMemo } from 'react';\r\nimport invariant from 'tiny-invariant';\r\n\r\nimport { EditorContext } from './EditorContext';\r\nimport { QueryMethods } from './query';\r\nimport { EditorStore } from './store';\r\n\r\nimport { CoreEventHandlers } from '../events/CoreEventHandlers';\r\nimport { useEventHandler } from '../events/EventContext';\r\nimport { EditorState } from '../interfaces';\r\n\r\nexport type EditorCollector<C> = (\r\n  state: EditorState,\r\n  query: QueryCallbacksFor<typeof QueryMethods>\r\n) => C;\r\n\r\nexport type useInternalEditorReturnType<C = null> = useCollectorReturnType<\r\n  EditorStore,\r\n  C\r\n> & {\r\n  inContext: boolean;\r\n  store: EditorStore;\r\n  connectors: EventHandlerConnectors<CoreEventHandlers, React.ReactElement>;\r\n};\r\n\r\nexport function useInternalEditor<C>(\r\n  collector?: EditorCollector<C>\r\n): useInternalEditorReturnType<C> {\r\n  const handler = useEventHandler();\r\n  const store = useContext(EditorContext);\r\n  invariant(store, ERROR_USE_EDITOR_OUTSIDE_OF_EDITOR_CONTEXT);\r\n\r\n  const collected = useCollector(store, collector);\r\n\r\n  const connectorsUsage = useMemo(\r\n    () => handler && handler.createConnectorsUsage(),\r\n    [handler]\r\n  );\r\n\r\n  useEffect(() => {\r\n    connectorsUsage.register();\r\n\r\n    return () => {\r\n      connectorsUsage.cleanup();\r\n    };\r\n  }, [connectorsUsage]);\r\n\r\n  const connectors = useMemo(\r\n    () => connectorsUsage && wrapConnectorHooks(connectorsUsage.connectors),\r\n    [connectorsUsage]\r\n  );\r\n\r\n  return {\r\n    ...collected,\r\n    connectors,\r\n    inContext: !!store,\r\n    store,\r\n  };\r\n}\r\n"]}