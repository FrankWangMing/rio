{"version":3,"file":"NodeHelpers.js","sourceRoot":"","sources":["../../src/editor/NodeHelpers.ts"],"names":[],"mappings":"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","sourcesContent":["import {\r\n  deprecationWarning,\r\n  ERROR_CANNOT_DRAG,\r\n  ERROR_DUPLICATE_NODEID,\r\n  ERROR_INVALID_NODE_ID,\r\n  ERROR_MOVE_INCOMING_PARENT,\r\n  ERROR_MOVE_NONCANVAS_CHILD,\r\n  ERROR_MOVE_OUTGOING_PARENT,\r\n  ERROR_MOVE_TO_DESCENDANT,\r\n  ERROR_MOVE_TO_NONCANVAS_PARENT,\r\n  ERROR_MOVE_TOP_LEVEL_NODE,\r\n  ERROR_MOVE_CANNOT_DROP,\r\n  ROOT_NODE,\r\n} from '@rioe/utils';\r\nimport invariant from 'tiny-invariant';\r\n\r\nimport { EditorState, NodeId, NodeSelector } from '../interfaces';\r\nimport { getNodesFromSelector } from '../utils/getNodesFromSelector';\r\nimport { serializeNode } from '../utils/serializeNode';\r\n\r\nexport function NodeHelpers(state: EditorState, id: NodeId) {\r\n  invariant(typeof id == 'string', ERROR_INVALID_NODE_ID);\r\n\r\n  const node = state.nodes[id];\r\n\r\n  const nodeHelpers = (id) => NodeHelpers(state, id);\r\n\r\n  return {\r\n    isCanvas() {\r\n      return !!node.data.isCanvas;\r\n    },\r\n    isRoot() {\r\n      return node.id === ROOT_NODE;\r\n    },\r\n    isLinkedNode() {\r\n      return (\r\n        node.data.parent &&\r\n        nodeHelpers(node.data.parent).linkedNodes().includes(node.id)\r\n      );\r\n    },\r\n    isTopLevelNode() {\r\n      return this.isRoot() || this.isLinkedNode();\r\n    },\r\n    isDeletable() {\r\n      return !this.isTopLevelNode();\r\n    },\r\n    isParentOfTopLevelNodes: () =>\r\n      node.data.linkedNodes && Object.keys(node.data.linkedNodes).length > 0,\r\n    isParentOfTopLevelCanvas() {\r\n      deprecationWarning('query.node(id).isParentOfTopLevelCanvas', {\r\n        suggest: 'query.node(id).isParentOfTopLevelNodes',\r\n      });\r\n      return this.isParentOfTopLevelNodes();\r\n    },\r\n    isSelected() {\r\n      return state.events.selected.has(id);\r\n    },\r\n    isHovered() {\r\n      return state.events.hovered.has(id);\r\n    },\r\n    isDragged() {\r\n      return state.events.dragged.has(id);\r\n    },\r\n    get() {\r\n      return node;\r\n    },\r\n    ancestors(deep = false): NodeId[] {\r\n      function appendParentNode(\r\n        id: NodeId,\r\n        ancestors: NodeId[] = [],\r\n        depth: number = 0\r\n      ) {\r\n        const node = state.nodes[id];\r\n        if (!node) {\r\n          return ancestors;\r\n        }\r\n\r\n        ancestors.push(id);\r\n\r\n        if (!node.data.parent) {\r\n          return ancestors;\r\n        }\r\n\r\n        if (deep || (!deep && depth === 0)) {\r\n          ancestors = appendParentNode(node.data.parent, ancestors, depth + 1);\r\n        }\r\n        return ancestors;\r\n      }\r\n      return appendParentNode(node.data.parent);\r\n    },\r\n    descendants(\r\n      deep = false,\r\n      includeOnly?: 'linkedNodes' | 'childNodes'\r\n    ): NodeId[] {\r\n      function appendChildNode(\r\n        id: NodeId,\r\n        descendants: NodeId[] = [],\r\n        depth: number = 0\r\n      ) {\r\n        if (deep || (!deep && depth === 0)) {\r\n          const node = state.nodes[id];\r\n\r\n          if (!node) {\r\n            return descendants;\r\n          }\r\n\r\n          if (includeOnly !== 'childNodes') {\r\n            // Include linkedNodes if any\r\n            const linkedNodes = nodeHelpers(id).linkedNodes();\r\n\r\n            linkedNodes.forEach((nodeId) => {\r\n              descendants.push(nodeId);\r\n              descendants = appendChildNode(nodeId, descendants, depth + 1);\r\n            });\r\n          }\r\n\r\n          if (includeOnly !== 'linkedNodes') {\r\n            const childNodes = nodeHelpers(id).childNodes();\r\n\r\n            childNodes.forEach((nodeId) => {\r\n              descendants.push(nodeId);\r\n              descendants = appendChildNode(nodeId, descendants, depth + 1);\r\n            });\r\n          }\r\n\r\n          return descendants;\r\n        }\r\n        return descendants;\r\n      }\r\n      return appendChildNode(id);\r\n    },\r\n    linkedNodes() {\r\n      return Object.values(node.data.linkedNodes || {});\r\n    },\r\n    childNodes() {\r\n      return node.data.nodes || [];\r\n    },\r\n    isDraggable(onError?: (err: string) => void) {\r\n      try {\r\n        const targetNode = node;\r\n        invariant(!this.isTopLevelNode(), ERROR_MOVE_TOP_LEVEL_NODE);\r\n        invariant(\r\n          NodeHelpers(state, targetNode.data.parent).isCanvas(),\r\n          ERROR_MOVE_NONCANVAS_CHILD\r\n        );\r\n        invariant(\r\n          targetNode.rules.canDrag(targetNode, nodeHelpers),\r\n          ERROR_CANNOT_DRAG\r\n        );\r\n        return true;\r\n      } catch (err) {\r\n        if (onError) {\r\n          onError(err);\r\n        }\r\n        return false;\r\n      }\r\n    },\r\n    isDroppable(selector: NodeSelector, onError?: (err: string) => void) {\r\n      const targets = getNodesFromSelector(state.nodes, selector);\r\n\r\n      const newParentNode = node;\r\n\r\n      try {\r\n        invariant(this.isCanvas(), ERROR_MOVE_TO_NONCANVAS_PARENT);\r\n        invariant(\r\n          newParentNode.rules.canMoveIn(\r\n            targets.map((selector) => selector.node),\r\n            newParentNode,\r\n            nodeHelpers\r\n          ),\r\n          ERROR_MOVE_INCOMING_PARENT\r\n        );\r\n\r\n        const parentNodes = {};\r\n\r\n        targets.forEach(({ node: targetNode, exists }) => {\r\n          invariant(\r\n            targetNode.rules.canDrop(newParentNode, targetNode, nodeHelpers),\r\n            ERROR_MOVE_CANNOT_DROP\r\n          );\r\n\r\n          // Ignore other checking if the Node is new\r\n          if (!exists) {\r\n            return;\r\n          }\r\n\r\n          invariant(\r\n            !nodeHelpers(targetNode.id).isTopLevelNode(),\r\n            ERROR_MOVE_TOP_LEVEL_NODE\r\n          );\r\n\r\n          const targetDeepNodes = nodeHelpers(targetNode.id).descendants(true);\r\n\r\n          invariant(\r\n            !targetDeepNodes.includes(newParentNode.id) &&\r\n              newParentNode.id !== targetNode.id,\r\n            ERROR_MOVE_TO_DESCENDANT\r\n          );\r\n\r\n          const currentParentNode =\r\n            targetNode.data.parent && state.nodes[targetNode.data.parent];\r\n\r\n          invariant(\r\n            currentParentNode.data.isCanvas,\r\n            ERROR_MOVE_NONCANVAS_CHILD\r\n          );\r\n\r\n          invariant(\r\n            currentParentNode ||\r\n              (!currentParentNode && !state.nodes[targetNode.id]),\r\n            ERROR_DUPLICATE_NODEID\r\n          );\r\n\r\n          if (currentParentNode.id !== newParentNode.id) {\r\n            if (!parentNodes[currentParentNode.id]) {\r\n              parentNodes[currentParentNode.id] = [];\r\n            }\r\n\r\n            parentNodes[currentParentNode.id].push(targetNode);\r\n          }\r\n        });\r\n\r\n        Object.keys(parentNodes).forEach((parentNodeId) => {\r\n          const childNodes = parentNodes[parentNodeId];\r\n          const parentNode = state.nodes[parentNodeId];\r\n\r\n          invariant(\r\n            parentNode.rules.canMoveOut(childNodes, parentNode, nodeHelpers),\r\n            ERROR_MOVE_OUTGOING_PARENT\r\n          );\r\n        });\r\n\r\n        return true;\r\n      } catch (err) {\r\n        if (onError) {\r\n          onError(err);\r\n        }\r\n        return false;\r\n      }\r\n    },\r\n    toSerializedNode() {\r\n      return serializeNode(node.data, state.options.resolver);\r\n    },\r\n    toNodeTree(includeOnly?: 'linkedNodes' | 'childNodes') {\r\n      const nodes = [id, ...this.descendants(true, includeOnly)].reduce(\r\n        (accum, descendantId) => {\r\n          accum[descendantId] = nodeHelpers(descendantId).get();\r\n          return accum;\r\n        },\r\n        {}\r\n      );\r\n\r\n      return {\r\n        rootNodeId: id,\r\n        nodes,\r\n      };\r\n    },\r\n\r\n    /**\r\n     Deprecated NodeHelpers\r\n     **/\r\n\r\n    decendants(deep = false) {\r\n      deprecationWarning('query.node(id).decendants', {\r\n        suggest: 'query.node(id).descendants',\r\n      });\r\n      return this.descendants(deep);\r\n    },\r\n    isTopLevelCanvas() {\r\n      return !this.isRoot() && !node.data.parent;\r\n    },\r\n  };\r\n}\r\n"]}