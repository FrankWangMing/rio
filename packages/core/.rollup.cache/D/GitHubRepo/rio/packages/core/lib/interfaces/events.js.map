{"version":3,"file":"events.js","sourceRoot":"","sources":["../../src/interfaces/events.ts"],"names":[],"mappings":"","sourcesContent":["import { NodeId, Node, NodeTree } from './nodes';\r\n\r\nexport type NodeInfo = {\r\n  id: NodeId;\r\n} & DOMInfo;\r\n\r\nexport type DOMInfo = Record<\r\n  | 'x'\r\n  | 'y'\r\n  | 'top'\r\n  | 'left'\r\n  | 'bottom'\r\n  | 'right'\r\n  | 'width'\r\n  | 'height'\r\n  | 'outerWidth'\r\n  | 'outerHeight',\r\n  number\r\n> & {\r\n  inFlow: boolean;\r\n  margin: Record<'top' | 'left' | 'bottom' | 'right', number>;\r\n  padding: Record<'top' | 'left' | 'bottom' | 'right', number>;\r\n};\r\n\r\nexport interface DropPosition {\r\n  parent: Node;\r\n  index: number;\r\n  where: string;\r\n}\r\n\r\nexport type Placement = DropPosition & {\r\n  currentNode: Node | null;\r\n};\r\n\r\ntype ExistingDragTarget = {\r\n  type: 'existing';\r\n  nodes: NodeId[];\r\n};\r\n\r\ntype NewDragTarget = {\r\n  type: 'new';\r\n  tree: NodeTree;\r\n};\r\n\r\nexport type DragTarget = ExistingDragTarget | NewDragTarget;\r\n"]}