{"version":3,"file":"deserializeNode.js","sourceRoot":"","sources":["../../src/utils/deserializeNode.tsx"],"names":[],"mappings":"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","sourcesContent":["import { ERROR_DESERIALIZE_COMPONENT_NOT_IN_RESOLVER } from '@rioe/utils';\r\nimport React from 'react';\r\nimport invariant from 'tiny-invariant';\r\n\r\nimport { resolveComponent } from './resolveComponent';\r\n\r\nimport {\r\n  NodeData,\r\n  SerializedNode,\r\n  ReducedComp,\r\n  ReduceCompType,\r\n} from '../interfaces';\r\nimport { Resolver } from '../interfaces';\r\nimport { Canvas } from '../nodes/Canvas';\r\n\r\ntype DeserialisedType = JSX.Element & { name: string };\r\n\r\nconst restoreType = (type: ReduceCompType, resolver: Resolver) =>\r\n  typeof type === 'object' && type.resolvedName\r\n    ? type.resolvedName === 'Canvas'\r\n      ? Canvas\r\n      : resolver[type.resolvedName]\r\n    : typeof type === 'string'\r\n    ? type\r\n    : null;\r\n\r\nexport const deserializeComp = (\r\n  data: ReducedComp,\r\n  resolver: Resolver,\r\n  index?: number\r\n): DeserialisedType | void => {\r\n  let { type, props } = data;\r\n\r\n  const main = restoreType(type, resolver);\r\n\r\n  if (!main) {\r\n    return;\r\n  }\r\n\r\n  props = Object.keys(props).reduce((result: Record<string, any>, key) => {\r\n    const prop = props[key];\r\n    if (prop === null || prop === undefined) {\r\n      result[key] = null;\r\n    } else if (typeof prop === 'object' && prop.resolvedName) {\r\n      result[key] = deserializeComp(prop, resolver);\r\n    } else if (key === 'children' && Array.isArray(prop)) {\r\n      result[key] = prop.map((child) => {\r\n        if (typeof child === 'string') {\r\n          return child;\r\n        }\r\n        return deserializeComp(child, resolver);\r\n      });\r\n    } else {\r\n      result[key] = prop;\r\n    }\r\n    return result;\r\n  }, {});\r\n\r\n  if (index) {\r\n    props.key = index;\r\n  }\r\n\r\n  const jsx = {\r\n    ...React.createElement(main, {\r\n      ...props,\r\n    }),\r\n  };\r\n\r\n  return {\r\n    ...jsx,\r\n    name: resolveComponent(resolver, jsx.type),\r\n  };\r\n};\r\n\r\nexport const deserializeNode = (\r\n  data: SerializedNode,\r\n  resolver: Resolver\r\n): Omit<NodeData, 'event'> => {\r\n  const { type: Comp, props: Props, ...nodeData } = data;\r\n\r\n  const isCompAnHtmlElement = Comp !== undefined && typeof Comp === 'string';\r\n  const isCompAUserComponent =\r\n    Comp !== undefined &&\r\n    (Comp as { resolvedName?: string }).resolvedName !== undefined;\r\n\r\n  invariant(\r\n    isCompAnHtmlElement || isCompAUserComponent,\r\n    ERROR_DESERIALIZE_COMPONENT_NOT_IN_RESOLVER.replace(\r\n      '%displayName%',\r\n      data.displayName\r\n    ).replace('%availableComponents%', Object.keys(resolver).join(', '))\r\n  );\r\n\r\n  const { type, name, props } = (deserializeComp(\r\n    data,\r\n    resolver\r\n  ) as unknown) as NodeData;\r\n\r\n  const { parent, custom, displayName, isCanvas, nodes, hidden } = nodeData;\r\n\r\n  const linkedNodes = nodeData.linkedNodes || nodeData._childCanvas;\r\n\r\n  return {\r\n    type,\r\n    name,\r\n    displayName: displayName || name,\r\n    props,\r\n    custom: custom || {},\r\n    isCanvas: !!isCanvas,\r\n    hidden: !!hidden,\r\n    parent,\r\n    linkedNodes: linkedNodes || {},\r\n    nodes: nodes || [],\r\n  };\r\n};\r\n"]}