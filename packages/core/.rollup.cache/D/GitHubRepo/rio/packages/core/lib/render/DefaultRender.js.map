{"version":3,"file":"DefaultRender.js","sourceRoot":"","sources":["../../src/render/DefaultRender.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,EAAE,OAAO,EAAE,MAAM,OAAO,CAAC;AAEvC,OAAO,EAAE,aAAa,EAAE,MAAM,iBAAiB,CAAC;AAGhD,OAAO,EAAE,WAAW,EAAE,MAAM,sBAAsB,CAAC;AACnD,OAAO,EAAE,eAAe,EAAE,MAAM,0BAA0B,CAAC;AAE3D,MAAM,CAAC,MAAM,aAAa,GAAG,GAAG,EAAE;IAChC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,kBAAkB,EAAE,GAAG,eAAe,CAChE,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;QACT,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI;QACpB,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK;QACtB,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK;QACtB,kBAAkB,EAAE,IAAI,CAAC,mBAAmB;KAC7C,CAAC,CACH,CAAC;IAEF,OAAO,OAAO,CAAC,GAAG,EAAE;QAClB,IAAI,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;QAE9B,IAAI,KAAK,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;YAC9B,QAAQ,GAAG,CACT,oBAAC,KAAK,CAAC,QAAQ,QACZ,KAAK,CAAC,GAAG,CAAC,CAAC,EAAU,EAAE,EAAE,CAAC,CACzB,oBAAC,WAAW,IAAC,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,GAAI,CACjC,CAAC,CACa,CAClB,CAAC;QACJ,CAAC;QAED,MAAM,MAAM,GAAG,KAAK,CAAC,aAAa,CAAC,IAAI,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;QAE1D,IAAI,OAAO,IAAI,IAAI,QAAQ,EAAE,CAAC;YAC5B,OAAO,oBAAC,aAAa,IAAC,MAAM,EAAE,MAAM,GAAI,CAAC;QAC3C,CAAC;QAED,OAAO,MAAM,CAAC;QACd,wDAAwD;IAC1D,CAAC,EAAE,CAAC,IAAI,EAAE,KAAK,EAAE,kBAAkB,EAAE,KAAK,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC","sourcesContent":["import React, { useMemo } from 'react';\r\n\r\nimport { SimpleElement } from './SimpleElement';\r\n\r\nimport { NodeId } from '../interfaces';\r\nimport { NodeElement } from '../nodes/NodeElement';\r\nimport { useInternalNode } from '../nodes/useInternalNode';\r\n\r\nexport const DefaultRender = () => {\r\n  const { type, props, nodes, hydrationTimestamp } = useInternalNode(\r\n    (node) => ({\r\n      type: node.data.type,\r\n      props: node.data.props,\r\n      nodes: node.data.nodes,\r\n      hydrationTimestamp: node._hydrationTimestamp,\r\n    })\r\n  );\r\n\r\n  return useMemo(() => {\r\n    let children = props.children;\r\n\r\n    if (nodes && nodes.length > 0) {\r\n      children = (\r\n        <React.Fragment>\r\n          {nodes.map((id: NodeId) => (\r\n            <NodeElement id={id} key={id} />\r\n          ))}\r\n        </React.Fragment>\r\n      );\r\n    }\r\n\r\n    const render = React.createElement(type, props, children);\r\n\r\n    if (typeof type == 'string') {\r\n      return <SimpleElement render={render} />;\r\n    }\r\n\r\n    return render;\r\n    // eslint-disable-next-line  react-hooks/exhaustive-deps\r\n  }, [type, props, hydrationTimestamp, nodes]);\r\n};\r\n"]}