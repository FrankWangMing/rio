{"version":3,"file":"DefaultEventHandlers.js","sourceRoot":"","sources":["../../src/events/DefaultEventHandlers.ts"],"names":[],"mappings":"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","sourcesContent":["import { isChromium, isLinux } from '@rio/utils';\r\nimport isFunction from 'lodash/isFunction';\r\nimport React from 'react';\r\n\r\nimport { CoreEventHandlers, CreateHandlerOptions } from './CoreEventHandlers';\r\nimport { Positioner } from './Positioner';\r\nimport { createShadow } from './createShadow';\r\n\r\nimport { Indicator, NodeId, DragTarget, NodeTree } from '../interfaces';\r\n\r\nexport type DefaultEventHandlersOptions = {\r\n  isMultiSelectEnabled: (e: MouseEvent) => boolean;\r\n  removeHoverOnMouseleave: boolean;\r\n};\r\n\r\n/**\r\n * Specifies Editor-wide event handlers and connectors\r\n */\r\nexport class DefaultEventHandlers<O = {}> extends CoreEventHandlers<\r\n  DefaultEventHandlersOptions & O\r\n> {\r\n  /**\r\n   * Note: Multiple drag shadows (ie: via multiselect in v0.2 and higher) do not look good on Linux Chromium due to way it renders drag shadows in general,\r\n   * so will have to fallback to the single shadow approach above for the time being\r\n   * see: https://bugs.chromium.org/p/chromium/issues/detail?id=550999\r\n   */\r\n  static forceSingleDragShadow = isChromium() && isLinux();\r\n\r\n  draggedElementShadow: HTMLElement;\r\n  dragTarget: DragTarget;\r\n  positioner: Positioner | null = null;\r\n  currentSelectedElementIds = [];\r\n\r\n  onDisable() {\r\n    this.options.store.actions.clearEvents();\r\n  }\r\n\r\n  handlers() {\r\n    const store = this.options.store;\r\n\r\n    return {\r\n      connect: (el: HTMLElement, id: NodeId) => {\r\n        store.actions.setDOM(id, el);\r\n\r\n        return this.reflect((connectors) => {\r\n          connectors.select(el, id);\r\n          connectors.hover(el, id);\r\n          connectors.drop(el, id);\r\n        });\r\n      },\r\n      select: (el: HTMLElement, id: NodeId) => {\r\n        const unbindOnMouseDown = this.addCraftEventListener(\r\n          el,\r\n          'mousedown',\r\n          (e) => {\r\n            e.craft.stopPropagation();\r\n\r\n            let newSelectedElementIds = [];\r\n\r\n            if (id) {\r\n              const { query } = store;\r\n              const selectedElementIds = query.getEvent('selected').all();\r\n              const isMultiSelect = this.options.isMultiSelectEnabled(e);\r\n\r\n              /**\r\n               * Retain the previously select elements if the multi-select condition is enabled\r\n               * or if the currentNode is already selected\r\n               *\r\n               * so users can just click to drag the selected elements around without holding the multi-select key\r\n               */\r\n\r\n              if (isMultiSelect || selectedElementIds.includes(id)) {\r\n                newSelectedElementIds = selectedElementIds.filter(\r\n                  (selectedId) => {\r\n                    const descendants = query\r\n                      .node(selectedId)\r\n                      .descendants(true);\r\n                    const ancestors = query.node(selectedId).ancestors(true);\r\n\r\n                    // Deselect ancestors/descendants\r\n                    if (descendants.includes(id) || ancestors.includes(id)) {\r\n                      return false;\r\n                    }\r\n\r\n                    return true;\r\n                  }\r\n                );\r\n              }\r\n\r\n              if (!newSelectedElementIds.includes(id)) {\r\n                newSelectedElementIds.push(id);\r\n              }\r\n            }\r\n\r\n            store.actions.setNodeEvent('selected', newSelectedElementIds);\r\n          }\r\n        );\r\n\r\n        const unbindOnClick = this.addCraftEventListener(el, 'click', (e) => {\r\n          e.craft.stopPropagation();\r\n\r\n          const { query } = store;\r\n          const selectedElementIds = query.getEvent('selected').all();\r\n\r\n          const isMultiSelect = this.options.isMultiSelectEnabled(e);\r\n          const isNodeAlreadySelected = this.currentSelectedElementIds.includes(\r\n            id\r\n          );\r\n\r\n          let newSelectedElementIds = [...selectedElementIds];\r\n\r\n          if (isMultiSelect && isNodeAlreadySelected) {\r\n            newSelectedElementIds.splice(newSelectedElementIds.indexOf(id), 1);\r\n            store.actions.setNodeEvent('selected', newSelectedElementIds);\r\n          } else if (!isMultiSelect && selectedElementIds.length > 1) {\r\n            newSelectedElementIds = [id];\r\n            store.actions.setNodeEvent('selected', newSelectedElementIds);\r\n          }\r\n\r\n          this.currentSelectedElementIds = newSelectedElementIds;\r\n        });\r\n\r\n        return () => {\r\n          unbindOnMouseDown();\r\n          unbindOnClick();\r\n        };\r\n      },\r\n      hover: (el: HTMLElement, id: NodeId) => {\r\n        const unbindMouseover = this.addCraftEventListener(\r\n          el,\r\n          'mouseover',\r\n          (e) => {\r\n            e.craft.stopPropagation();\r\n            store.actions.setNodeEvent('hovered', id);\r\n          }\r\n        );\r\n\r\n        let unbindMouseleave: (() => void) | null = null;\r\n\r\n        if (this.options.removeHoverOnMouseleave) {\r\n          unbindMouseleave = this.addCraftEventListener(\r\n            el,\r\n            'mouseleave',\r\n            (e) => {\r\n              e.craft.stopPropagation();\r\n              store.actions.setNodeEvent('hovered', null);\r\n            }\r\n          );\r\n        }\r\n\r\n        return () => {\r\n          unbindMouseover();\r\n\r\n          if (!unbindMouseleave) {\r\n            return;\r\n          }\r\n\r\n          unbindMouseleave();\r\n        };\r\n      },\r\n      drop: (el: HTMLElement, targetId: NodeId) => {\r\n        const unbindDragOver = this.addCraftEventListener(\r\n          el,\r\n          'dragover',\r\n          (e) => {\r\n            e.craft.stopPropagation();\r\n            e.preventDefault();\r\n\r\n            if (!this.positioner) {\r\n              return;\r\n            }\r\n\r\n            const indicator = this.positioner.computeIndicator(\r\n              targetId,\r\n              e.clientX,\r\n              e.clientY\r\n            );\r\n\r\n            if (!indicator) {\r\n              return;\r\n            }\r\n\r\n            store.actions.setIndicator(indicator);\r\n          }\r\n        );\r\n\r\n        const unbindDragEnter = this.addCraftEventListener(\r\n          el,\r\n          'dragenter',\r\n          (e) => {\r\n            e.craft.stopPropagation();\r\n            e.preventDefault();\r\n          }\r\n        );\r\n\r\n        return () => {\r\n          unbindDragEnter();\r\n          unbindDragOver();\r\n        };\r\n      },\r\n      drag: (el: HTMLElement, id: NodeId) => {\r\n        if (!store.query.node(id).isDraggable()) {\r\n          return () => {};\r\n        }\r\n\r\n        el.setAttribute('draggable', 'true');\r\n\r\n        const unbindDragStart = this.addCraftEventListener(\r\n          el,\r\n          'dragstart',\r\n          (e) => {\r\n            e.craft.stopPropagation();\r\n\r\n            const { query, actions } = store;\r\n\r\n            let selectedElementIds = query.getEvent('selected').all();\r\n\r\n            const isMultiSelect = this.options.isMultiSelectEnabled(e);\r\n            const isNodeAlreadySelected = this.currentSelectedElementIds.includes(\r\n              id\r\n            );\r\n\r\n            if (!isNodeAlreadySelected) {\r\n              if (isMultiSelect) {\r\n                selectedElementIds = [...selectedElementIds, id];\r\n              } else {\r\n                selectedElementIds = [id];\r\n              }\r\n              store.actions.setNodeEvent('selected', selectedElementIds);\r\n            }\r\n\r\n            actions.setNodeEvent('dragged', selectedElementIds);\r\n\r\n            const selectedDOMs = selectedElementIds.map(\r\n              (id) => query.node(id).get().dom\r\n            );\r\n\r\n            this.draggedElementShadow = createShadow(\r\n              e,\r\n              selectedDOMs,\r\n              DefaultEventHandlers.forceSingleDragShadow\r\n            );\r\n\r\n            this.dragTarget = {\r\n              type: 'existing',\r\n              nodes: selectedElementIds,\r\n            };\r\n\r\n            this.positioner = new Positioner(\r\n              this.options.store,\r\n              this.dragTarget\r\n            );\r\n          }\r\n        );\r\n\r\n        const unbindDragEnd = this.addCraftEventListener(el, 'dragend', (e) => {\r\n          e.craft.stopPropagation();\r\n\r\n          this.dropElement((dragTarget, indicator) => {\r\n            if (dragTarget.type === 'new') {\r\n              return;\r\n            }\r\n\r\n            const index =\r\n              indicator.placement.index +\r\n              (indicator.placement.where === 'after' ? 1 : 0);\r\n\r\n            store.actions.move(\r\n              dragTarget.nodes,\r\n              indicator.placement.parent.id,\r\n              index\r\n            );\r\n          });\r\n        });\r\n\r\n        return () => {\r\n          el.setAttribute('draggable', 'false');\r\n          unbindDragStart();\r\n          unbindDragEnd();\r\n        };\r\n      },\r\n      create: (\r\n        el: HTMLElement,\r\n        userElement: React.ReactElement | (() => NodeTree | React.ReactElement),\r\n        options?: Partial<CreateHandlerOptions>\r\n      ) => {\r\n        el.setAttribute('draggable', 'true');\r\n\r\n        const unbindDragStart = this.addCraftEventListener(\r\n          el,\r\n          'dragstart',\r\n          (e) => {\r\n            e.craft.stopPropagation();\r\n            let tree;\r\n            if (typeof userElement === 'function') {\r\n              const result = userElement();\r\n              if (React.isValidElement(result)) {\r\n                tree = store.query.parseReactElement(result).toNodeTree();\r\n              } else {\r\n                tree = result;\r\n              }\r\n            } else {\r\n              tree = store.query.parseReactElement(userElement).toNodeTree();\r\n            }\r\n\r\n            const dom = e.currentTarget as HTMLElement;\r\n            this.draggedElementShadow = createShadow(\r\n              e,\r\n              [dom],\r\n              DefaultEventHandlers.forceSingleDragShadow\r\n            );\r\n            this.dragTarget = {\r\n              type: 'new',\r\n              tree,\r\n            };\r\n\r\n            this.positioner = new Positioner(\r\n              this.options.store,\r\n              this.dragTarget\r\n            );\r\n          }\r\n        );\r\n\r\n        const unbindDragEnd = this.addCraftEventListener(el, 'dragend', (e) => {\r\n          e.craft.stopPropagation();\r\n          this.dropElement((dragTarget, indicator) => {\r\n            if (dragTarget.type === 'existing') {\r\n              return;\r\n            }\r\n\r\n            const index =\r\n              indicator.placement.index +\r\n              (indicator.placement.where === 'after' ? 1 : 0);\r\n            store.actions.addNodeTree(\r\n              dragTarget.tree,\r\n              indicator.placement.parent.id,\r\n              index\r\n            );\r\n\r\n            if (options && isFunction(options.onCreate)) {\r\n              options.onCreate(dragTarget.tree);\r\n            }\r\n          });\r\n        });\r\n\r\n        return () => {\r\n          el.removeAttribute('draggable');\r\n          unbindDragStart();\r\n          unbindDragEnd();\r\n        };\r\n      },\r\n    };\r\n  }\r\n\r\n  private dropElement(\r\n    onDropNode: (dragTarget: DragTarget, placement: Indicator) => void\r\n  ) {\r\n    const store = this.options.store;\r\n\r\n    if (!this.positioner) {\r\n      return;\r\n    }\r\n\r\n    const draggedElementShadow = this.draggedElementShadow;\r\n\r\n    const indicator = this.positioner.getIndicator();\r\n\r\n    if (this.dragTarget && indicator && !indicator.error) {\r\n      onDropNode(this.dragTarget, indicator);\r\n    }\r\n\r\n    if (draggedElementShadow) {\r\n      draggedElementShadow.parentNode.removeChild(draggedElementShadow);\r\n      this.draggedElementShadow = null;\r\n    }\r\n\r\n    this.dragTarget = null;\r\n\r\n    store.actions.setIndicator(null);\r\n    store.actions.setNodeEvent('dragged', null);\r\n    this.positioner.cleanup();\r\n\r\n    this.positioner = null;\r\n  }\r\n}\r\n"]}